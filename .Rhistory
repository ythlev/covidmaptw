xml_child(xml_child(xml_child(main, 1), 1), 1)
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_child(1)
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_text()
data_cases <- readr::read_csv(
"https://data.cdc.gov.tw/download?resourceid=3c1e263d-16ec-4d70-b56c-21c9e2171fc7&dataurl=https://od.cdc.gov.tw/eic/Day_Confirmation_Age_County_Gender_19CoV.csv",
col_names = c(NA, "date", "county", "town", NA, NA, NA, "cases")
) |>
dplyr::slice(-1) |>
dplyr::mutate(
date = as.Date(date, format = "%Y%m%d"),
site_id = paste0(county, town),
cases = as.integer(cases)
)
View(data_cases)
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_set_text(max(data_cases$date))
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_set_text(as.character(max(data_cases$date)))
View(main)
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_child(1)
main |>
xml2::xml_child(1) |>
xml2::xml_child(1)
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_children()
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_children()[2:6]
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_children()
2:6
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_child(2:6)
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_children()
function(node) {
node |>
xml2::xml_set_text(as.character(breaks[xml2::xml_text(node)[-1]]))
}
fill_towns <- function(node) {
xml2::xml_set_attr(node, "fill", colour_town[xml2::xml_attr(node, "id")])
}
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_children() |>
purrr::walk(write_breaks)
write_breaks <- function(node) {
node |>
xml2::xml_set_text(as.character(breaks[xml2::xml_text(node)[-1]]))
}
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_children() |>
purrr::walk(write_breaks)
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_child(1
node <- main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_child(1)
node <- main |>
xml2::xml_child(1) |>
xml2::xml_child(1)
node
node <- main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>xml2::xml_child(1)
node <- main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>xml2::xml_child(2)
node
breaks[xml2::xml_text(node)[-1]]
xml2::xml_text(node)[-1]
xml2::xml_text(node)
xml2::xml_text(node)[1]
xml2::xml_text(node)[[1]]
xml2::xml_text(node)[1:1]
write_breaks <- function(node) {
node |>
xml2::xml_set_text(as.character(breaks))
}
node <- main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_children() |>
purrr::walk(write_breaks)
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_children() |>
purrr::walk(write_breaks)
View(main)
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_children()
styler:::style_active_file()
for (i in 2:6) {
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_child(i) |>
xml2::xml_set_text(as.character(breaks[i]))
}
View(main)
main |>
xml2::xml_child(1) |>
xml2::xml_child(1)
for (i in 2:6) {
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_child(i - 1) |>
xml2::xml_set_text(as.character(breaks[i]))
}
main |>
xml2::xml_child(1) |>
xml2::xml_child(1)
for (i in 2:6) {
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_child(i) |>
xml2::xml_set_text(as.character(breaks[i - 1]))
}
main |>
xml2::xml_child(1) |>
xml2::xml_child(1)
for (i in 2:6) {
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_child(i) |>
xml2::xml_set_text(as.character(round(breaks[i - 1], 2)))
}
main |>
xml2::xml_child(1) |>
xml2::xml_child(1)
main <- xml2::read_xml("data/template.svg")
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_set_text(as.character(max(data_cases$date)))
for (i in 2:6) {
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_child(i) |>
xml2::xml_set_text(as.character(round(breaks[i - 1], 2)))
}
main |>
xml2::xml_child(3) |>
xml2::xml_children() |>
purrr::walk(fill_towns, ~ xml2::xml_set_attr(.x, "fill", colour_town[xml2::xml_attr(node, "id")]))
main |>
xml2::xml_child(3) |>
xml2::xml_children() |>
purrr::walk(fill_towns, ~ xml2::xml_set_attr(.x, "fill", colour_town[xml2::xml_attr(.x, "id")]))
main |>
xml2::xml_child(3) |>
xml2::xml_children() |>
purrr::walk(~ xml2::xml_set_attr(.x, "fill", colour_town[xml2::xml_attr(.x, "id")]))
xml2::write_xml(main, choose.files())
format(breaks)
format(round(breaks, 1))
for (i in 2:6) {
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_child(i) |>
xml2::xml_set_text(format(round(breaks[i - 1], 1)))
}
xml2::write_xml(main, choose.files())
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_child(i) |>
xml2::xml_set_text(format(round(breaks[i - 1], 1), justify = "right"))
for (i in 2:6) {
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_child(i) |>
xml2::xml_set_text(format(round(breaks[i - 1], 1), justify = "right"))
}
xml2::write_xml(main, choose.files())
for (i in 2:6) {
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_child(i) |>
xml2::xml_set_text(prettyNum(breaks[i - 1]))
}
xml2::write_xml(main, choose.files())
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_child(i) |>
xml2::xml_set_text(prettyNum(breaks[i - 1], digits = 1))
for (i in 2:6) {
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_child(i) |>
xml2::xml_set_text(prettyNum(breaks[i - 1], digits = 1))
}
main |>
xml2::xml_child(1) |>
xml2::xml_child(1
)
for (i in 2:6) {
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_child(i) |>
xml2::xml_set_text(prettyNum(breaks[i - 1], digits = 2))
}
main |>
xml2::xml_child(1) |>
xml2::xml_child(1)
for (i in 2:6) {
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_child(i) |>
xml2::xml_set_text(prettyNum(breaks[i - 1], format = "f"))
}
main |>
xml2::xml_child(1) |>
xml2::xml_child(1)
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_child(i) |>
xml2::xml_set_text(prettyNum(breaks[i - 1], flag = "#"))
for (i in 2:6) {
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_child(i) |>
xml2::xml_set_text(prettyNum(breaks[i - 1], flag = "#"))
}
main |>
xml2::xml_child(1) |>
xml2::xml_child(1)
breaks <- prettyNum(breaks)
breaks <- c(
0,
1 / 9 * rate_mean,
4 / 9 * rate_mean,
9 / 9 * rate_mean,
16 / 9 * rate_mean
)
breaks <- prettyNum(breaks, digits = 2)
breaks <- c(
0,
1 / 9 * rate_mean,
4 / 9 * rate_mean,
9 / 9 * rate_mean,
16 / 9 * rate_mean
)
breaks_ <- prettyNum(breaks, digits = 2, flag = "#")
breaks_ <- prettyNum(breaks, digits = 2, format = "f", flag = "#")
breaks_ <- prettyNum(breaks, digits = 2, format = "g", flag = "#")
breaks_ <- prettyNum(breaks, digits = 2, format = "g", flag = "#")
breaks_ <- prettyNum(breaks, digits = 2, format = "fg", flag = "#")
breaks_ <- formatC(breaks, digits = 2)
breaks_ <- formatC(breaks, digits = 2, flag = "#")
breaks_
breaks_ <- formatC(breaks, flag = "#")
breaks_
breaks_ <- formatC(breaks)
breaks_
breaks_ <- formatC(breaks, flag = "#")
breaks_
breaks_ <- formatC(breaks, digits = 1, flag = "#")
breaks_
breaks_ <- formatC(breaks, digits = 2, flag = "#")
breaks_
breaks_ <- formatC(breaks, justify = "right")
breaks_ <- formatC(breaks)
breaks_
breaks_ <- prettyNum(breaks)
breaks_
breaks_ <- formatC(breaks, digits = 2)
breaks_
breaks_ <- formatC(breaks, digits = 2, flag = "#")
breaks_
breaks_ <- formatC(breaks, flag = "#")
breaks_
breaks_ <- format(breaks)
breaks_
breaks_ <- format(breaks, justify = "right")
breaks_
breaks_ <- format(breaks, digits = 1, justify = "right")
breaks_
breaks_ <- format(breaks, digits = 2, justify = "right")
breaks_
breaks <- format(breaks, digits = 2, justify = "right")
for (i in 2:6) {
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_child(i) |>
xml2::xml_set_text(breaks[i - 1])
}
xml2::write_xml(main, choose.files())
breaks[1] <- paste("<", breaks[2])
breaks[2:5] <- paste("≥", breaks[2:5])
breaks
for (i in 2:6) {
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_child(i) |>
xml2::xml_set_text(breaks[i - 1])
}
xml2::write_xml(main, choose.files())
breaks <- format(breaks, digits = 2)
breaks <- c(
0,
1 / 9 * rate_mean,
4 / 9 * rate_mean,
9 / 9 * rate_mean,
16 / 9 * rate_mean
)
breaks <- format(breaks, digits = 2)
breaks[1] <- paste("<", breaks[2])
breaks[2:5] <- paste("≥", breaks[2:5])
xml2::write_xml(main, choose.files())
main <- xml2::read_xml("data/template.svg")
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_set_text(as.character(max(data_cases$date)))
breaks <- format(breaks, digits = 2)
breaks[1] <- paste("<", breaks[2])
breaks[2:5] <- paste("≥", breaks[2:5])
for (i in 2:6) {
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_child(i) |>
xml2::xml_set_text(breaks[i - 1])
}
main |>
xml2::xml_child(3) |>
xml2::xml_children() |>
purrr::walk(~ xml2::xml_set_attr(.x, "fill", colour_town[xml2::xml_attr(.x, "id")]))
xml2::write_xml(main, choose.files())
breaks <- c(
0,
1 / 9 * rate_mean,
4 / 9 * rate_mean,
9 / 9 * rate_mean,
16 / 9 * rate_mean
)
breaks <- format(breaks, digits = 2)
breaks[1] <- paste("<", breaks[2])
breaks[2:5] <- paste("≥", breaks[2:5])
for (i in 2:6) {
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_child(i) |>
xml2::xml_set_text(breaks[i - 1])
}
xml2::write_xml(main, choose.files())
make_covid_map <- function(file) {
data_cases <- readr::read_csv(
"https://data.cdc.gov.tw/download?resourceid=3c1e263d-16ec-4d70-b56c-21c9e2171fc7&dataurl=https://od.cdc.gov.tw/eic/Day_Confirmation_Age_County_Gender_19CoV.csv",
col_names = c(NA, "date", "county", "town", NA, NA, NA, "cases")
) |>
dplyr::slice(-1) |>
dplyr::mutate(
date = as.Date(date, format = "%Y%m%d"),
site_id = paste0(county, town),
cases = as.integer(cases)
)
data_cases |>
dplyr::count(site_id, wt = cases) |>
dplyr::right_join(towns) |>
dplyr::mutate(
n = tidyr::replace_na(n, 0),
rate = 100000 * n / people_total
)
rate_mean <- sum(towns$n) / length(towns$n)
breaks <- c(
0,
1 / 9 * rate_mean,
4 / 9 * rate_mean,
9 / 9 * rate_mean,
16 / 9 * rate_mean
)
towns <- towns |>
dplyr::mutate(
level = findInterval(rate, breaks),
fill = RColorBrewer::brewer.pal(5, "RdPu")[level]
)
colour_town <- towns$fill
names(colour_town) <- towns$site_id
main <- xml2::read_xml("data/template.svg")
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_set_text(as.character(max(data_cases$date)))
breaks <- format(breaks, digits = 2)
breaks[1] <- paste("<", breaks[2])
breaks[2:5] <- paste("≥", breaks[2:5])
for (i in 2:6) {
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_child(i) |>
xml2::xml_set_text(breaks[i - 1])
}
main |>
xml2::xml_child(3) |>
xml2::xml_children() |>
purrr::walk(~ xml2::xml_set_attr(.x, "fill", colour_town[xml2::xml_attr(.x, "id")]))
xml2::write_xml(main, choose.files())
}
main <- xml2::read_xml("data/template.svg")
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_set_text(as.character(max(data_cases$date)))
for (i in 2:6) {
main |>
xml2::xml_child(1) |>
xml2::xml_child(1) |>
xml2::xml_child(i) |>
xml2::xml_set_text(breaks[i - 1])
}
main |>
xml2::xml_child(3) |>
xml2::xml_children() |>
purrr::walk(~ xml2::xml_set_attr(.x, "fill", colour_town[xml2::xml_attr(.x, "id")]))
xml2::write_xml(main, choose.files())
rename_files(fill_towns, make_covid_map)
rename_files("fill_towns", "make_covid_map")
use_r("towns")
load("~/covidmaptw/data/towns.rda")
View(towns)
towns
main <- xml2::read_xml(system.file("extdata", "template.svg"))
main <- xml2::read_xml(system.file("extdata", "template.svg", package = "covidmaptw", mustWork = TRUE))
devtools::load_all(".")
main <- xml2::read_xml(system.file("extdata", "template.svg", package = "covidmaptw", mustWork = TRUE))
View(main)
devtools::load_all(".")
make_covid_map(choose.files())
data_cases <- readr::read_csv(
"https://data.cdc.gov.tw/download?resourceid=3c1e263d-16ec-4d70-b56c-21c9e2171fc7&dataurl=https://od.cdc.gov.tw/eic/Day_Confirmation_Age_County_Gender_19CoV.csv",
col_names = c(NA, "date", "county", "town", NA, NA, NA, "cases")
) |>
dplyr::slice(-1) |>
dplyr::mutate(
date = as.Date(date, format = "%Y%m%d"),
site_id = paste0(county, town),
cases = as.integer(cases)
)
data_cases |>
dplyr::count(site_id, wt = cases) |>
dplyr::right_join(towns) |>
dplyr::mutate(
n = tidyr::replace_na(n, 0),
rate = 100000 * n / people_total
)
devtools::load_all(".")
make_covid_map(choose.files())
use_readme_md()
library(covidmaptw)
load("~/covidmaptw/data/towns.rda")
town <- towns
use_data(town)
rename_files("towns", "town")
devtools::load_all(".")
make_covid_map("29MAY.svg")
